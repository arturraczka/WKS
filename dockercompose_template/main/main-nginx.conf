upstream koop_form_app {
    server webapp:8000;
}

include /nginx-conf/server.conf;

server {

    include /nginx-conf/server_name.conf;
    listen 443 ssl;

    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_certificate     /website.crt;
    ssl_certificate_key /website.key;

    location / {
        proxy_pass http://koop_form_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/ {
        alias /app/koop_form/staticfiles/;
    }

    location /prometheus/  {
        auth_basic "Protected Admin Panel";
        auth_basic_user_file /nginx-conf/htpasswd;
        proxy_pass http://koop_form_app/prometheus/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}


lua_shared_dict prometheus_metrics 10M;
lua_package_path "/nginx-lua-prometheus/?.lua;;";

init_worker_by_lua_block {
  prometheus = require("prometheus").init("prometheus_metrics")

  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
  metric_connections = prometheus:gauge(
    "nginx_http_connections", "Number of HTTP connections", {"state"})
}

log_by_lua_block {
  if not (ngx.var.location == "/metrics") then
    -- ngx.log(ngx.STDERR, "debug 1") --#this is commneted with --
    metric_requests:inc(1, {"metrics", ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
  end
}

server {
  listen 9145;
  location /metrics {
    content_by_lua_block {
      metric_connections:set(ngx.var.connections_reading, {"reading"})
      metric_connections:set(ngx.var.connections_waiting, {"waiting"})
      metric_connections:set(ngx.var.connections_writing, {"writing"})
      prometheus:collect()
    }
  }
}